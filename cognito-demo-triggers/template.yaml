AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  cognito-demo-triggers

  Sample SAM Template for cognito-demo-triggers

# パラメータ設定
Parameters:
  CognitoUserPoolArn:
    Type: String
    Description: Cognito ユーザープールの ARN

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  AuthenticatedFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: authenticated/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          LOGIN_LOGS_TABLE: !Ref LoginLogsTable
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt LoginLogsTable.Arn
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - app.ts

  # Lambda 関数に、Cognito からの実行（Invoke）を許可するリソースポリシーを追加
  # これは画面から Lambda トリガーを設定する場合、 Lambda 関数側の「設定 > リソースベースのポリシーステートメント」欄に自動設定される
  AuthenticatedFunctionInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt AuthenticatedFunction.Arn
      Action: lambda:InvokeFunction
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Ref CognitoUserPoolArn

  # ログイン履歴テーブル
  # AWS::Serverless::SimpleTable というシュガーシンタックスで行けるかと思ったけどソートキーは設定できないみたいなので使用を断念
  # 参考：https://docs.aws.amazon.com/ja_jp/serverless-application-model/latest/developerguide/sam-resource-simpletable.html
  LoginLogsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: cognito-demo-login-logs
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      AttributeDefinitions:
        - AttributeName: UserId
          AttributeType: S
        - AttributeName: Timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: UserId
          KeyType: HASH
        - AttributeName: Timestamp
          KeyType: RANGE
